{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"iCrowd Simulation Tool Documentation Overview A comprehensive crowd simulation system designed for architectural visualization, urban planning, film production, and game development. This tool provides both static distribution and dynamic movement capabilities through integrated systems that work together seamlessly. System Architecture Static Distribution Systems On Ground System - Terrain-based scattering across surfaces - Flexible density control with vertex group masking - Support for individual agents and cluster formations - Natural variation with noise and randomization On Curve System - Path-based distributions with width control - Curve radius scaling for dynamic density - Automatic agent orientation along paths - Count-based or density-based placement options On Vertex System - Precision placement on mesh vertices - Custom patterns through vertex group selection - Ideal for architectural layouts and exact formations - Weight painting support for density gradients Stadium System - Organized seating and venue layouts - Four input methods: On Face, On Instance, On Collection, On Vertex - Grid-based control for row/column arrangements - Rotation and transformation controls for perfect alignment Walkers System - Structured path-based crowd flows - Lane management with count and direction control - Personal space and density management - Noise parameters for natural variations City System - Urban environment placements - Activity-based behaviors (sleep, eat, work, fun) - Infrastructure-aware distribution (roads, sidewalks) - Collision management and time-based patterns Dynamic Control System Fluid System - Real-time movement simulation - Multiple control methods: Path following, Attraction, Repulsion - Physics-based behaviors with speed controls - Integration with all static distribution systems Key Features Distribution Capabilities Multiple static systems for different scenarios Vertex group masking for precise control Density gradients and natural variations Support for individual agents and collections Movement Control Path following with curve-based direction Attraction/repulsion systems for goal-oriented behavior Real-time parameter adjustment Physics-based collision avoidance Performance Optimization Scalable from small groups to massive crowds Baking capabilities for complex simulations LOD support for real-time applications Efficient memory management Workflow Integration Standard Pipeline Static Placement : Choose appropriate static system for initial distribution Density Refinement : Adjust parameters and masking for desired layout Dynamic Activation : Import static setup into Fluid system for movement Behavior Tuning : Configure paths, attractors, and repellers Final Polish : Adjust variations and performance settings System Combinations Urban Scenes : City system + Fluid system Structured Events : Walkers system + Stadium system Architectural Visualization : On Vertex system + Fluid system Complex Productions : Combined use of all systems Getting Started Quick Start Guides Basic terrain scattering with On Ground system Path-based crowds with On Curve system Venue seating with Stadium system Dynamic crowds with Fluid system System Selection Guide For natural environments : On Ground system For path-based flows : On Curve or Walkers systems For precise placements : On Vertex system For venue seating : Stadium system For urban environments : City system For dynamic movement : Fluid system Documentation Structure System Documentation Detailed parameter explanations for each system Workflow examples and use cases Performance optimization guidelines Troubleshooting common issues Tutorial Section Step-by-step project tutorials Video demonstrations Example files and templates Advanced technique showcases FAQ & Support Common questions and solutions Technical troubleshooting Best practices and tips Community resources Technical Specifications Compatibility Node-based workflow integration Standard 3D modeling software compatibility Export capabilities for game engines and renderers Cross-platform performance optimization System Requirements Detailed hardware recommendations Memory and processing requirements GPU acceleration support Scalability considerations Support Resources Learning Materials Video tutorials for all skill levels Interactive example files Project templates and presets Community showcase gallery Community & Updates User forum for questions and sharing Regular system updates and improvements Feature request system Bug reporting and tracking This documentation covers the complete crowd simulation ecosystem. Use the navigation to explore specific systems or jump to tutorials for hands-on learning.","title":"Home"},{"location":"#icrowd-simulation-tool-documentation","text":"","title":"iCrowd Simulation Tool Documentation"},{"location":"#overview","text":"A comprehensive crowd simulation system designed for architectural visualization, urban planning, film production, and game development. This tool provides both static distribution and dynamic movement capabilities through integrated systems that work together seamlessly.","title":"Overview"},{"location":"#system-architecture","text":"","title":"System Architecture"},{"location":"#static-distribution-systems","text":"On Ground System - Terrain-based scattering across surfaces - Flexible density control with vertex group masking - Support for individual agents and cluster formations - Natural variation with noise and randomization On Curve System - Path-based distributions with width control - Curve radius scaling for dynamic density - Automatic agent orientation along paths - Count-based or density-based placement options On Vertex System - Precision placement on mesh vertices - Custom patterns through vertex group selection - Ideal for architectural layouts and exact formations - Weight painting support for density gradients Stadium System - Organized seating and venue layouts - Four input methods: On Face, On Instance, On Collection, On Vertex - Grid-based control for row/column arrangements - Rotation and transformation controls for perfect alignment Walkers System - Structured path-based crowd flows - Lane management with count and direction control - Personal space and density management - Noise parameters for natural variations City System - Urban environment placements - Activity-based behaviors (sleep, eat, work, fun) - Infrastructure-aware distribution (roads, sidewalks) - Collision management and time-based patterns","title":"Static Distribution Systems"},{"location":"#dynamic-control-system","text":"Fluid System - Real-time movement simulation - Multiple control methods: Path following, Attraction, Repulsion - Physics-based behaviors with speed controls - Integration with all static distribution systems","title":"Dynamic Control System"},{"location":"#key-features","text":"","title":"Key Features"},{"location":"#distribution-capabilities","text":"Multiple static systems for different scenarios Vertex group masking for precise control Density gradients and natural variations Support for individual agents and collections","title":"Distribution Capabilities"},{"location":"#movement-control","text":"Path following with curve-based direction Attraction/repulsion systems for goal-oriented behavior Real-time parameter adjustment Physics-based collision avoidance","title":"Movement Control"},{"location":"#performance-optimization","text":"Scalable from small groups to massive crowds Baking capabilities for complex simulations LOD support for real-time applications Efficient memory management","title":"Performance Optimization"},{"location":"#workflow-integration","text":"","title":"Workflow Integration"},{"location":"#standard-pipeline","text":"Static Placement : Choose appropriate static system for initial distribution Density Refinement : Adjust parameters and masking for desired layout Dynamic Activation : Import static setup into Fluid system for movement Behavior Tuning : Configure paths, attractors, and repellers Final Polish : Adjust variations and performance settings","title":"Standard Pipeline"},{"location":"#system-combinations","text":"Urban Scenes : City system + Fluid system Structured Events : Walkers system + Stadium system Architectural Visualization : On Vertex system + Fluid system Complex Productions : Combined use of all systems","title":"System Combinations"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#quick-start-guides","text":"Basic terrain scattering with On Ground system Path-based crowds with On Curve system Venue seating with Stadium system Dynamic crowds with Fluid system","title":"Quick Start Guides"},{"location":"#system-selection-guide","text":"For natural environments : On Ground system For path-based flows : On Curve or Walkers systems For precise placements : On Vertex system For venue seating : Stadium system For urban environments : City system For dynamic movement : Fluid system","title":"System Selection Guide"},{"location":"#documentation-structure","text":"","title":"Documentation Structure"},{"location":"#system-documentation","text":"Detailed parameter explanations for each system Workflow examples and use cases Performance optimization guidelines Troubleshooting common issues","title":"System Documentation"},{"location":"#tutorial-section","text":"Step-by-step project tutorials Video demonstrations Example files and templates Advanced technique showcases","title":"Tutorial Section"},{"location":"#faq-support","text":"Common questions and solutions Technical troubleshooting Best practices and tips Community resources","title":"FAQ &amp; Support"},{"location":"#technical-specifications","text":"","title":"Technical Specifications"},{"location":"#compatibility","text":"Node-based workflow integration Standard 3D modeling software compatibility Export capabilities for game engines and renderers Cross-platform performance optimization","title":"Compatibility"},{"location":"#system-requirements","text":"Detailed hardware recommendations Memory and processing requirements GPU acceleration support Scalability considerations","title":"System Requirements"},{"location":"#support-resources","text":"","title":"Support Resources"},{"location":"#learning-materials","text":"Video tutorials for all skill levels Interactive example files Project templates and presets Community showcase gallery","title":"Learning Materials"},{"location":"#community-updates","text":"User forum for questions and sharing Regular system updates and improvements Feature request system Bug reporting and tracking This documentation covers the complete crowd simulation ecosystem. Use the navigation to explore specific systems or jump to tutorials for hands-on learning.","title":"Community &amp; Updates"},{"location":"dynamic/","text":"iCrowds Dynamic Systems System Overview iCrowds provides three specialized crowd simulation systems for different scenarios: 1. City System Purpose: Autonomous urban population simulation Best For: - Open-world city environments - Agents with independent needs and behaviors - Complex urban planning studies Key Features: - Needs-based AI (hunger, sleep, fun, bladder) - Automatic pathfinding to activities - High agent customization - Debug tools for behavior monitoring 2. Fluid System Purpose: Artist-controlled crowd movement Best For: - Directed crowd flow - Event and venue simulations - Emergency evacuation planning Key Features: - Flow curves for guided movement - Attracter/repeler objects - Multiple distribution methods - Physics-based collision avoidance 3. Walkers System Purpose: Organized path-based pedestrian traffic Best For: - Sidewalks and crosswalks - Museum/retail visitor flow - Structured movement patterns Key Features: - Lane-based curve following - Bidirectional traffic flow - Simple setup and management - Consistent animation patterns Quick System Selection Guide Choose City System if: - You want autonomous, life-like behavior - Agents should make independent decisions - Simulating daily urban activities Choose Fluid System if: - You need precise crowd direction control - Using attractors/repellers to shape movement - Creating natural crowd flow patterns Choose Walkers System if: - You need organized path following - Simulating sidewalk or lane-based traffic - Quick setup with predictable results Common Workflow Setup Environment - Prepare terrain and collision objects Select System - Choose based on your simulation needs Configure Distribution - Place agents using density controls Set Behaviors - Configure speeds, activities, or paths Add Controls - Place flow curves, attracters, or activities Run Simulation - Monitor with debug tools as needed Technical Notes All systems support custom agent collections Speed thresholds control animation transitions Distribution uses weight painting for density control Systems can be combined in different scene areas Getting Started Start with the Walkers System for simple path-based crowds Use Fluid System for controlled crowd movement Implement City System for complex autonomous populations Remember: You can mix systems in different parts of your scene for optimal results.","title":"Overview"},{"location":"dynamic/#icrowds-dynamic-systems","text":"","title":"iCrowds Dynamic Systems"},{"location":"dynamic/#system-overview","text":"iCrowds provides three specialized crowd simulation systems for different scenarios:","title":"System Overview"},{"location":"dynamic/#1-city-system","text":"Purpose: Autonomous urban population simulation Best For: - Open-world city environments - Agents with independent needs and behaviors - Complex urban planning studies Key Features: - Needs-based AI (hunger, sleep, fun, bladder) - Automatic pathfinding to activities - High agent customization - Debug tools for behavior monitoring","title":"1. City System"},{"location":"dynamic/#2-fluid-system","text":"Purpose: Artist-controlled crowd movement Best For: - Directed crowd flow - Event and venue simulations - Emergency evacuation planning Key Features: - Flow curves for guided movement - Attracter/repeler objects - Multiple distribution methods - Physics-based collision avoidance","title":"2. Fluid System"},{"location":"dynamic/#3-walkers-system","text":"Purpose: Organized path-based pedestrian traffic Best For: - Sidewalks and crosswalks - Museum/retail visitor flow - Structured movement patterns Key Features: - Lane-based curve following - Bidirectional traffic flow - Simple setup and management - Consistent animation patterns","title":"3. Walkers System"},{"location":"dynamic/#quick-system-selection-guide","text":"Choose City System if: - You want autonomous, life-like behavior - Agents should make independent decisions - Simulating daily urban activities Choose Fluid System if: - You need precise crowd direction control - Using attractors/repellers to shape movement - Creating natural crowd flow patterns Choose Walkers System if: - You need organized path following - Simulating sidewalk or lane-based traffic - Quick setup with predictable results","title":"Quick System Selection Guide"},{"location":"dynamic/#common-workflow","text":"Setup Environment - Prepare terrain and collision objects Select System - Choose based on your simulation needs Configure Distribution - Place agents using density controls Set Behaviors - Configure speeds, activities, or paths Add Controls - Place flow curves, attracters, or activities Run Simulation - Monitor with debug tools as needed","title":"Common Workflow"},{"location":"dynamic/#technical-notes","text":"All systems support custom agent collections Speed thresholds control animation transitions Distribution uses weight painting for density control Systems can be combined in different scene areas","title":"Technical Notes"},{"location":"dynamic/#getting-started","text":"Start with the Walkers System for simple path-based crowds Use Fluid System for controlled crowd movement Implement City System for complex autonomous populations Remember: You can mix systems in different parts of your scene for optimal results.","title":"Getting Started"},{"location":"dynamic/city/","text":"City iCrowd System - User Documentation Overview The Dynamic Behaviour System is a comprehensive simulation system that controls agent behaviors, movement, and interactions within urban environments. The system consists of three main components: Distribution, Settings, and Agents. Distribution Input Configuration The system supports two types of urban environment inputs: iCity : Pre-built city environment Custom City : User-defined city configuration consisting of: City Ground : Base terrain and infrastructure Colliders : Obstacles and navigation boundaries Distribution Settings Object Configuration Custom City Ground : Enable/disable custom ground objects Colliders : Toggle collision detection objects Custom City Colliders Collection : Organize collision objects in dedicated collections Agent Scattering Viewer : Render visualization mode Density Controls : Density : 1 meter spacing between agents Max : Maximum of 2,000 agents Factor : Distribution factor (default: 0.407) Seed : Randomization seed for agent placement Weight Painting Vertex Group Mask : Use vertex groups to control agent distribution density Settings Speed Configuration Speed Scalar : Global multiplier for all agent speeds (default: 1.000) Walking Speed : Threshold speed for walking animation (0.010) Run Speed : Threshold speed for running animation (1.200) Max Speed : Maximum possible speed in the system (10.000) Activities System Activity Types The system supports multiple activity types: - Fun - Entertainment and leisure activities - Sleep - Resting and sleeping locations - Hunger - Food and dining locations - Bladder - Restroom facilities Activity Input Users can input either: - Single Object : Individual activity location - Collection : Group of related activities (e.g., collection of fun locations) Needs-Based Behavior Each agent maintains dynamic needs sliders for: - Fun - Sleep - Hunger - Bladder Behavior Flow : 1. When a need decreases below threshold, agent pathfinds to nearest relevant activity 2. Upon reaching activity location, the corresponding need parameter is filled 3. Agent then seeks to fulfill other deficient needs 4. Continuous cycle of need fulfillment creates emergent behavior patterns Debug Features Movement Debugging Debug Movement : Visualizes agent movement directions Path Finding Grid : Displays navigation mesh used for pathfinding Activity Debugging Debug Activity : Shows real-time needs sliders above each agent Activity Indicator : Circular icon above slider indicates current active action Performance Optimization Path Finding Path Finding Details : Controls grid resolution (default: 1.000) Lower values increase performance for large-scale simulations Higher values provide more precise navigation Time Management Time Scale : Controls need depletion rate (default: 0.008) Higher values make needs deplete faster Affects simulation pacing (e.g., agents feel sleepy more quickly) Agents Agent Collections Pre-configured agent animation states: - Male Agents : - men Idle - men Walk - men Run - Female Agents : - women Idle - women Walk - women Run Density Management Probability : Controls spawn likelihood of agent collections (default: 0.500) Agent Settings : Separate configuration for Male and Female agents Agent Customization Individual Agent Editing Customize Agent : Modify specific agent instances Change Clothes : Swap agent clothing and appearance Change Action : Modify animation behaviors Include All : Apply changes to entire agent group Custom Agent Creation Users can add custom agents or collections with: - Object : Agent mesh object - Collection : Agent group collection - Agent Mesh : 3D model reference - Agent Armature : Animation skeleton - Gender : Male/Female classification Collection Management Include : Add agents to active simulation Discard : Remove agents from consideration Workflow Setup : Configure city environment (iCity or Custom) Distribution : Scatter agents with density controls Activities : Place activity objects or collections Agents : Configure agent types, probabilities, and behaviors Simulation : Run with debug tools for monitoring Optimization : Adjust pathfinding and time scale as needed This system creates dynamic, emergent behaviors where agents autonomously navigate urban environments to fulfill their needs, creating realistic crowd simulation and urban activity patterns.","title":"City System"},{"location":"dynamic/city/#city-icrowd-system-user-documentation","text":"","title":"City iCrowd System - User Documentation"},{"location":"dynamic/city/#overview","text":"The Dynamic Behaviour System is a comprehensive simulation system that controls agent behaviors, movement, and interactions within urban environments. The system consists of three main components: Distribution, Settings, and Agents.","title":"Overview"},{"location":"dynamic/city/#distribution","text":"","title":"Distribution"},{"location":"dynamic/city/#input-configuration","text":"The system supports two types of urban environment inputs: iCity : Pre-built city environment Custom City : User-defined city configuration consisting of: City Ground : Base terrain and infrastructure Colliders : Obstacles and navigation boundaries","title":"Input Configuration"},{"location":"dynamic/city/#distribution-settings","text":"","title":"Distribution Settings"},{"location":"dynamic/city/#object-configuration","text":"Custom City Ground : Enable/disable custom ground objects Colliders : Toggle collision detection objects Custom City Colliders Collection : Organize collision objects in dedicated collections","title":"Object Configuration"},{"location":"dynamic/city/#agent-scattering","text":"Viewer : Render visualization mode Density Controls : Density : 1 meter spacing between agents Max : Maximum of 2,000 agents Factor : Distribution factor (default: 0.407) Seed : Randomization seed for agent placement","title":"Agent Scattering"},{"location":"dynamic/city/#weight-painting","text":"Vertex Group Mask : Use vertex groups to control agent distribution density","title":"Weight Painting"},{"location":"dynamic/city/#settings","text":"","title":"Settings"},{"location":"dynamic/city/#speed-configuration","text":"Speed Scalar : Global multiplier for all agent speeds (default: 1.000) Walking Speed : Threshold speed for walking animation (0.010) Run Speed : Threshold speed for running animation (1.200) Max Speed : Maximum possible speed in the system (10.000)","title":"Speed Configuration"},{"location":"dynamic/city/#activities-system","text":"","title":"Activities System"},{"location":"dynamic/city/#activity-types","text":"The system supports multiple activity types: - Fun - Entertainment and leisure activities - Sleep - Resting and sleeping locations - Hunger - Food and dining locations - Bladder - Restroom facilities","title":"Activity Types"},{"location":"dynamic/city/#activity-input","text":"Users can input either: - Single Object : Individual activity location - Collection : Group of related activities (e.g., collection of fun locations)","title":"Activity Input"},{"location":"dynamic/city/#needs-based-behavior","text":"Each agent maintains dynamic needs sliders for: - Fun - Sleep - Hunger - Bladder Behavior Flow : 1. When a need decreases below threshold, agent pathfinds to nearest relevant activity 2. Upon reaching activity location, the corresponding need parameter is filled 3. Agent then seeks to fulfill other deficient needs 4. Continuous cycle of need fulfillment creates emergent behavior patterns","title":"Needs-Based Behavior"},{"location":"dynamic/city/#debug-features","text":"","title":"Debug Features"},{"location":"dynamic/city/#movement-debugging","text":"Debug Movement : Visualizes agent movement directions Path Finding Grid : Displays navigation mesh used for pathfinding","title":"Movement Debugging"},{"location":"dynamic/city/#activity-debugging","text":"Debug Activity : Shows real-time needs sliders above each agent Activity Indicator : Circular icon above slider indicates current active action","title":"Activity Debugging"},{"location":"dynamic/city/#performance-optimization","text":"","title":"Performance Optimization"},{"location":"dynamic/city/#path-finding","text":"Path Finding Details : Controls grid resolution (default: 1.000) Lower values increase performance for large-scale simulations Higher values provide more precise navigation","title":"Path Finding"},{"location":"dynamic/city/#time-management","text":"Time Scale : Controls need depletion rate (default: 0.008) Higher values make needs deplete faster Affects simulation pacing (e.g., agents feel sleepy more quickly)","title":"Time Management"},{"location":"dynamic/city/#agents","text":"","title":"Agents"},{"location":"dynamic/city/#agent-collections","text":"Pre-configured agent animation states: - Male Agents : - men Idle - men Walk - men Run - Female Agents : - women Idle - women Walk - women Run","title":"Agent Collections"},{"location":"dynamic/city/#density-management","text":"Probability : Controls spawn likelihood of agent collections (default: 0.500) Agent Settings : Separate configuration for Male and Female agents","title":"Density Management"},{"location":"dynamic/city/#agent-customization","text":"","title":"Agent Customization"},{"location":"dynamic/city/#individual-agent-editing","text":"Customize Agent : Modify specific agent instances Change Clothes : Swap agent clothing and appearance Change Action : Modify animation behaviors Include All : Apply changes to entire agent group","title":"Individual Agent Editing"},{"location":"dynamic/city/#custom-agent-creation","text":"Users can add custom agents or collections with: - Object : Agent mesh object - Collection : Agent group collection - Agent Mesh : 3D model reference - Agent Armature : Animation skeleton - Gender : Male/Female classification","title":"Custom Agent Creation"},{"location":"dynamic/city/#collection-management","text":"Include : Add agents to active simulation Discard : Remove agents from consideration","title":"Collection Management"},{"location":"dynamic/city/#workflow","text":"Setup : Configure city environment (iCity or Custom) Distribution : Scatter agents with density controls Activities : Place activity objects or collections Agents : Configure agent types, probabilities, and behaviors Simulation : Run with debug tools for monitoring Optimization : Adjust pathfinding and time scale as needed This system creates dynamic, emergent behaviors where agents autonomously navigate urban environments to fulfill their needs, creating realistic crowd simulation and urban activity patterns.","title":"Workflow"},{"location":"dynamic/fluid/","text":"Fluid iCrowd System - User Documentation Overview The Fluid System is an alternative agent distribution and control system that provides three distinct distribution methods and specialized control objects to influence agent movement and behavior. Distribution View Mode Render : Standard visualization mode for agent distribution Terrain Configuration Fluid Terrain : Enable fluid-based terrain interactions Distribution Types The system supports three distribution methods: 1. Distribute On Terrain Distributes agents across the entire input terrain surface Weight Paint : Use brush tools to paint distribution density on specific terrain areas Vertex Group Mask : Utilize vertex groups to control agent placement 2. Distribute On Vertex Places agents specifically on mesh vertices Provides precise control over agent positioning 3. Crowd System Distribution Integrates with external crowd systems Takes existing instances and replaces them with dynamic agents Enables migration from static crowds to interactive agent systems Distribution Parameters Distance Min : Minimum spacing between agents (0.5 m) Density Max : Maximum agent density (1.000) Seed : Randomization seed for distribution patterns (0) Weight Painting Brush Tool : Interactive painting interface for density control Vertex Group Mask : Use predefined vertex groups as distribution masks Settings Speed Thresholds Walk Speed : 0.010 m/s - Agents use walking animation below this speed Run Speed : 1.000 m/s - Agents switch to running animation above this speed Max Speed : 1.000 m/s - Absolute maximum movement speed Collision Prevention Relax Iterations : 1 iteration - Controls how agents avoid passing through each other Higher values increase collision avoidance quality Lower values improve performance Control Objects Three Control Types Users can input single objects or collections for each control type: 1. Flow Curves Function : Agents follow the tangent direction of curves Zone of Effect : Controlled by curve radius Editing : Select curve points in Edit Mode Use Alt+S to scale radius up or down Larger radius = wider influence area 2. Attracters Function : Pull agents toward the object location Radius Control : Object scale determines attraction area Recommended : Use empty sphere objects for clear visualization 3. Repelers Function : Push agents away from object location Radius Control : Object scale determines repulsion area Recommended : Use empty sphere objects for clear visualization Agents Configuration Predefined Agent Collections Male Agents : mem Idle mem Walk mem Run Female Agents : women Idle women Walk women Run Agent Management Density Control Probability : 0.500 - Controls spawn likelihood of agent collections Agent Settings Separate configuration for Male and Female agents Gender-specific behavior and appearance settings Customization Options Include/Discard : Add or remove agents from simulation Customize Individual Agents : Modify specific agent instances (e.g., man1) Change Clothes : Swap clothing and appearance elements Change Action : Modify animation behaviors Include All : Apply changes to entire agent groups Custom Agent Creation Object : Reference to agent mesh object Collection : Agent group organization Agent Mesh : 3D model reference Agent Armature : Animation skeleton and rigging Gender : Male/Female classification for behavior rules Workflow Distribution Setup : Choose distribution type (Terrain/Vertex/Crowd System) Configure density and spacing parameters Use weight painting for area-specific control Agent Configuration : Select agent collections and probabilities Customize individual agents as needed Add custom agents if required Control Placement : Add Flow Curves for guided movement paths Place Attracters at points of interest Use Repelers to block areas or create obstacles Simulation Tuning : Adjust speed thresholds for animation transitions Set relax iterations for collision quality Fine-tune control object radii and positions Best Practices Use empty spheres for attracter/repeler objects for clear visualization Test flow curves with varying radii to create natural movement patterns Balance agent density with performance considerations Use weight painting to create realistic concentration areas Start with lower relax iterations and increase if collision issues occur This Fluid System provides flexible agent distribution and sophisticated movement control, enabling complex crowd simulations with natural-looking behaviors and interactions.","title":"Fluid System"},{"location":"dynamic/fluid/#fluid-icrowd-system-user-documentation","text":"","title":"Fluid iCrowd System - User Documentation"},{"location":"dynamic/fluid/#overview","text":"The Fluid System is an alternative agent distribution and control system that provides three distinct distribution methods and specialized control objects to influence agent movement and behavior.","title":"Overview"},{"location":"dynamic/fluid/#distribution","text":"","title":"Distribution"},{"location":"dynamic/fluid/#view-mode","text":"Render : Standard visualization mode for agent distribution","title":"View Mode"},{"location":"dynamic/fluid/#terrain-configuration","text":"Fluid Terrain : Enable fluid-based terrain interactions","title":"Terrain Configuration"},{"location":"dynamic/fluid/#distribution-types","text":"The system supports three distribution methods:","title":"Distribution Types"},{"location":"dynamic/fluid/#1-distribute-on-terrain","text":"Distributes agents across the entire input terrain surface Weight Paint : Use brush tools to paint distribution density on specific terrain areas Vertex Group Mask : Utilize vertex groups to control agent placement","title":"1. Distribute On Terrain"},{"location":"dynamic/fluid/#2-distribute-on-vertex","text":"Places agents specifically on mesh vertices Provides precise control over agent positioning","title":"2. Distribute On Vertex"},{"location":"dynamic/fluid/#3-crowd-system-distribution","text":"Integrates with external crowd systems Takes existing instances and replaces them with dynamic agents Enables migration from static crowds to interactive agent systems","title":"3. Crowd System Distribution"},{"location":"dynamic/fluid/#distribution-parameters","text":"Distance Min : Minimum spacing between agents (0.5 m) Density Max : Maximum agent density (1.000) Seed : Randomization seed for distribution patterns (0)","title":"Distribution Parameters"},{"location":"dynamic/fluid/#weight-painting","text":"Brush Tool : Interactive painting interface for density control Vertex Group Mask : Use predefined vertex groups as distribution masks","title":"Weight Painting"},{"location":"dynamic/fluid/#settings","text":"","title":"Settings"},{"location":"dynamic/fluid/#speed-thresholds","text":"Walk Speed : 0.010 m/s - Agents use walking animation below this speed Run Speed : 1.000 m/s - Agents switch to running animation above this speed Max Speed : 1.000 m/s - Absolute maximum movement speed","title":"Speed Thresholds"},{"location":"dynamic/fluid/#collision-prevention","text":"Relax Iterations : 1 iteration - Controls how agents avoid passing through each other Higher values increase collision avoidance quality Lower values improve performance","title":"Collision Prevention"},{"location":"dynamic/fluid/#control-objects","text":"","title":"Control Objects"},{"location":"dynamic/fluid/#three-control-types","text":"Users can input single objects or collections for each control type:","title":"Three Control Types"},{"location":"dynamic/fluid/#1-flow-curves","text":"Function : Agents follow the tangent direction of curves Zone of Effect : Controlled by curve radius Editing : Select curve points in Edit Mode Use Alt+S to scale radius up or down Larger radius = wider influence area","title":"1. Flow Curves"},{"location":"dynamic/fluid/#2-attracters","text":"Function : Pull agents toward the object location Radius Control : Object scale determines attraction area Recommended : Use empty sphere objects for clear visualization","title":"2. Attracters"},{"location":"dynamic/fluid/#3-repelers","text":"Function : Push agents away from object location Radius Control : Object scale determines repulsion area Recommended : Use empty sphere objects for clear visualization","title":"3. Repelers"},{"location":"dynamic/fluid/#agents-configuration","text":"","title":"Agents Configuration"},{"location":"dynamic/fluid/#predefined-agent-collections","text":"Male Agents : mem Idle mem Walk mem Run Female Agents : women Idle women Walk women Run","title":"Predefined Agent Collections"},{"location":"dynamic/fluid/#agent-management","text":"","title":"Agent Management"},{"location":"dynamic/fluid/#density-control","text":"Probability : 0.500 - Controls spawn likelihood of agent collections","title":"Density Control"},{"location":"dynamic/fluid/#agent-settings","text":"Separate configuration for Male and Female agents Gender-specific behavior and appearance settings","title":"Agent Settings"},{"location":"dynamic/fluid/#customization-options","text":"Include/Discard : Add or remove agents from simulation Customize Individual Agents : Modify specific agent instances (e.g., man1) Change Clothes : Swap clothing and appearance elements Change Action : Modify animation behaviors Include All : Apply changes to entire agent groups","title":"Customization Options"},{"location":"dynamic/fluid/#custom-agent-creation","text":"Object : Reference to agent mesh object Collection : Agent group organization Agent Mesh : 3D model reference Agent Armature : Animation skeleton and rigging Gender : Male/Female classification for behavior rules","title":"Custom Agent Creation"},{"location":"dynamic/fluid/#workflow","text":"Distribution Setup : Choose distribution type (Terrain/Vertex/Crowd System) Configure density and spacing parameters Use weight painting for area-specific control Agent Configuration : Select agent collections and probabilities Customize individual agents as needed Add custom agents if required Control Placement : Add Flow Curves for guided movement paths Place Attracters at points of interest Use Repelers to block areas or create obstacles Simulation Tuning : Adjust speed thresholds for animation transitions Set relax iterations for collision quality Fine-tune control object radii and positions","title":"Workflow"},{"location":"dynamic/fluid/#best-practices","text":"Use empty spheres for attracter/repeler objects for clear visualization Test flow curves with varying radii to create natural movement patterns Balance agent density with performance considerations Use weight painting to create realistic concentration areas Start with lower relax iterations and increase if collision issues occur This Fluid System provides flexible agent distribution and sophisticated movement control, enabling complex crowd simulations with natural-looking behaviors and interactions.","title":"Best Practices"},{"location":"dynamic/walkers/","text":"Walkers iCrowd System - User Documentation Overview The Walkers System is a specialized crowd simulation tool designed for controlled pedestrian movement along predefined paths. This system creates organized lane-based traffic flow with configurable agent behavior and path following. Distribution Viewer Render : Standard visualization mode for agent display Terrain Configuration Collection : Terrain setup consistent with other systems in the suite Distribution Setup Path Definition Distribution Object : Input a collection of curves that define walking paths Walkers Curve : Curves act as the central guide for lane generation Edit : Modify curve properties and placement Density Control Density : 1.000 - Controls the number of people distributed across lanes Randomness : 1.000 - Randomizes walker distribution along the lanes Seed : 0 - Randomization seed for consistent patterns Collision Avoidance Personal Space : Individual buffer zone for each agent Min : 0.000 - Minimum personal space distance Max : 1.000 - Maximum personal space distance Seed : 0 - Randomization seed for personal space variation Note : Personal space system activates when System Type is set to Physics (not Animation) Settings Agent Lifecycle Loop Type : Controls agent behavior at path endpoints Respawn : Agents reappear at the start when reaching the end Delete : Agents are removed from simulation when reaching the end System Configuration System Type : Animation : Uses animated movement (default) Physics : Enables physical interactions and collision avoidance Lane Management Lane Generation Count : 4 - Number of lane instances generated left and right of input curves Direction : 0.632 - Controls lane direction variation Values > 0.5 create opposing traffic flows Some agents move forward, others move in reverse direction Movement Variation Noise : Adds natural variation to agent movement Power : 1.000 - Strength of noise influence Offset : 0.000 - Base offset for noise pattern Scale : 0.100 - Size of noise pattern effect Speed Control Speed : 1.000 - Controls the movement speed of all agents Agents Configuration Agent Collections Single Collection Input : Unlike other systems, accepts only one collection type Animated Walking Meshes : Collection must contain pre-animated walking animation meshes No Gender Separation : All agents use the same animation collection Simplified Agent Management No individual agent customization (clothes, actions) No probability settings for different agent types Focus on uniform crowd behavior rather than individual variation Workflow Path Creation : Create and position guide curves for desired walking paths Organize curves into a collection for system input Distribution Setup : Set lane count for path width Adjust density for crowd size Configure personal space for collision avoidance Behavior Configuration : Choose loop type (respawn or delete) Set system type (animation or physics) Adjust direction for traffic flow patterns Movement Tuning : Set base movement speed Add noise for natural movement variation Fine-tune lane directions for realistic traffic patterns Key Features Lane-Based System : Automatically generates multiple lanes from single curves Bidirectional Traffic : Direction parameter creates natural opposing flows Consistent Animation : All agents use the same walking animation collection Controlled Density : Precise control over agent distribution along paths Collision Awareness : Personal space system prevents agent overlap Use Cases Sidewalk and pedestrian walkway simulations Museum or exhibition visitor flow Emergency egress and crowd movement studies Architectural planning for public spaces Traffic flow analysis for urban planning This Walkers System provides a streamlined approach for creating organized pedestrian movement patterns with minimal setup complexity, ideal for architectural visualization and urban planning applications where controlled crowd flow is essential.","title":"Walkers System"},{"location":"dynamic/walkers/#walkers-icrowd-system-user-documentation","text":"","title":"Walkers iCrowd System - User Documentation"},{"location":"dynamic/walkers/#overview","text":"The Walkers System is a specialized crowd simulation tool designed for controlled pedestrian movement along predefined paths. This system creates organized lane-based traffic flow with configurable agent behavior and path following.","title":"Overview"},{"location":"dynamic/walkers/#distribution","text":"","title":"Distribution"},{"location":"dynamic/walkers/#viewer","text":"Render : Standard visualization mode for agent display","title":"Viewer"},{"location":"dynamic/walkers/#terrain-configuration","text":"Collection : Terrain setup consistent with other systems in the suite","title":"Terrain Configuration"},{"location":"dynamic/walkers/#distribution-setup","text":"","title":"Distribution Setup"},{"location":"dynamic/walkers/#path-definition","text":"Distribution Object : Input a collection of curves that define walking paths Walkers Curve : Curves act as the central guide for lane generation Edit : Modify curve properties and placement","title":"Path Definition"},{"location":"dynamic/walkers/#density-control","text":"Density : 1.000 - Controls the number of people distributed across lanes Randomness : 1.000 - Randomizes walker distribution along the lanes Seed : 0 - Randomization seed for consistent patterns","title":"Density Control"},{"location":"dynamic/walkers/#collision-avoidance","text":"Personal Space : Individual buffer zone for each agent Min : 0.000 - Minimum personal space distance Max : 1.000 - Maximum personal space distance Seed : 0 - Randomization seed for personal space variation Note : Personal space system activates when System Type is set to Physics (not Animation)","title":"Collision Avoidance"},{"location":"dynamic/walkers/#settings","text":"","title":"Settings"},{"location":"dynamic/walkers/#agent-lifecycle","text":"Loop Type : Controls agent behavior at path endpoints Respawn : Agents reappear at the start when reaching the end Delete : Agents are removed from simulation when reaching the end","title":"Agent Lifecycle"},{"location":"dynamic/walkers/#system-configuration","text":"System Type : Animation : Uses animated movement (default) Physics : Enables physical interactions and collision avoidance","title":"System Configuration"},{"location":"dynamic/walkers/#lane-management","text":"","title":"Lane Management"},{"location":"dynamic/walkers/#lane-generation","text":"Count : 4 - Number of lane instances generated left and right of input curves Direction : 0.632 - Controls lane direction variation Values > 0.5 create opposing traffic flows Some agents move forward, others move in reverse direction","title":"Lane Generation"},{"location":"dynamic/walkers/#movement-variation","text":"Noise : Adds natural variation to agent movement Power : 1.000 - Strength of noise influence Offset : 0.000 - Base offset for noise pattern Scale : 0.100 - Size of noise pattern effect","title":"Movement Variation"},{"location":"dynamic/walkers/#speed-control","text":"Speed : 1.000 - Controls the movement speed of all agents","title":"Speed Control"},{"location":"dynamic/walkers/#agents-configuration","text":"","title":"Agents Configuration"},{"location":"dynamic/walkers/#agent-collections","text":"Single Collection Input : Unlike other systems, accepts only one collection type Animated Walking Meshes : Collection must contain pre-animated walking animation meshes No Gender Separation : All agents use the same animation collection","title":"Agent Collections"},{"location":"dynamic/walkers/#simplified-agent-management","text":"No individual agent customization (clothes, actions) No probability settings for different agent types Focus on uniform crowd behavior rather than individual variation","title":"Simplified Agent Management"},{"location":"dynamic/walkers/#workflow","text":"Path Creation : Create and position guide curves for desired walking paths Organize curves into a collection for system input Distribution Setup : Set lane count for path width Adjust density for crowd size Configure personal space for collision avoidance Behavior Configuration : Choose loop type (respawn or delete) Set system type (animation or physics) Adjust direction for traffic flow patterns Movement Tuning : Set base movement speed Add noise for natural movement variation Fine-tune lane directions for realistic traffic patterns","title":"Workflow"},{"location":"dynamic/walkers/#key-features","text":"Lane-Based System : Automatically generates multiple lanes from single curves Bidirectional Traffic : Direction parameter creates natural opposing flows Consistent Animation : All agents use the same walking animation collection Controlled Density : Precise control over agent distribution along paths Collision Awareness : Personal space system prevents agent overlap","title":"Key Features"},{"location":"dynamic/walkers/#use-cases","text":"Sidewalk and pedestrian walkway simulations Museum or exhibition visitor flow Emergency egress and crowd movement studies Architectural planning for public spaces Traffic flow analysis for urban planning This Walkers System provides a streamlined approach for creating organized pedestrian movement patterns with minimal setup complexity, ideal for architectural visualization and urban planning applications where controlled crowd flow is essential.","title":"Use Cases"},{"location":"extra/agents/","text":"Adding Agents - Quick Guide Agent Group Setup Adding Agent Groups Create agent groups to organize different character types Each group can contain multiple agent variations Provided Agents Pre-made Agents : Use our ready-to-use characters Customization : Change Clothes: Swap clothing and appearance Change Action: Modify animations and behaviors Include All: Apply changes to entire group Custom Agents Requirements : Must be animated meshes using armatures or any other way Single object only (join all character parts together) Input Options Single Object : One animated character mesh Collection : Multiple animated meshes as a group Agent Settings Gender Control : Male/Female classification Probability : 0.500 - Controls spawn likelihood Density : Overall agent distribution control Management Tools Include/Discard : Add or remove agents from simulation Weight Paint : Use vertex groups for density control Customize Individual Agents : Modify specific agents (e.g., man1) Workflow Create Agent Group Choose Provided or Custom Agents Adjust Probability and Density Customize Appearance and Animations Use Weight Painting for Area Control Note : Custom agents must be single joined objects with proper armature animations for best results.","title":"Customize"},{"location":"extra/agents/#adding-agents-quick-guide","text":"","title":"Adding Agents - Quick Guide"},{"location":"extra/agents/#agent-group-setup","text":"","title":"Agent Group Setup"},{"location":"extra/agents/#adding-agent-groups","text":"Create agent groups to organize different character types Each group can contain multiple agent variations","title":"Adding Agent Groups"},{"location":"extra/agents/#provided-agents","text":"Pre-made Agents : Use our ready-to-use characters Customization : Change Clothes: Swap clothing and appearance Change Action: Modify animations and behaviors Include All: Apply changes to entire group","title":"Provided Agents"},{"location":"extra/agents/#custom-agents","text":"Requirements : Must be animated meshes using armatures or any other way Single object only (join all character parts together)","title":"Custom Agents"},{"location":"extra/agents/#input-options","text":"Single Object : One animated character mesh Collection : Multiple animated meshes as a group","title":"Input Options"},{"location":"extra/agents/#agent-settings","text":"Gender Control : Male/Female classification Probability : 0.500 - Controls spawn likelihood Density : Overall agent distribution control","title":"Agent Settings"},{"location":"extra/agents/#management-tools","text":"Include/Discard : Add or remove agents from simulation Weight Paint : Use vertex groups for density control Customize Individual Agents : Modify specific agents (e.g., man1)","title":"Management Tools"},{"location":"extra/agents/#workflow","text":"Create Agent Group Choose Provided or Custom Agents Adjust Probability and Density Customize Appearance and Animations Use Weight Painting for Area Control Note : Custom agents must be single joined objects with proper armature animations for best results.","title":"Workflow"},{"location":"extra/faq/","text":"iCrowds Systems - Frequently Asked Questions General Questions Q: What's the difference between dynamic and static systems? A: Dynamic systems have moving agents with autonomous behaviors, while static systems place agents in fixed positions for background crowds. Q: What's the maximum number of agents supported? A: Most systems support up to 100,000 agents, but performance depends on your hardware and scene complexity. Q: Can I mix different systems in one scene? A: Yes! Combine systems like Walkers for paths + City for plazas + Stadium for seating areas. Q: How do I control where agents appear? A: Use weight painting, sphere masks, or vertex groups to define density areas. Dynamic Systems Questions City System Q: How do agents decide where to go? A: Agents have needs (hunger, sleep, fun, bladder) and pathfind to nearest relevant activities when needs get low. Q: What's the difference between walk and run speeds? A: Below walk speed = idle, between walk/run = walking animation, above run speed = running animation. Q: How does pathfinding detail affect performance? A: Lower values = faster simulation but less precise navigation. Use lower values for large scenes. Fluid System Q: How do flow curves work? A: Agents follow curve tangents. Use Alt+S in edit mode to scale radius and control zone of effect. Q: What's the purpose of relax iterations? A: Higher values prevent agents from passing through each other but cost performance. Q: Can attracters/repelers be animated? A: Yes! Animate the control objects to create dynamic crowd movements. Walkers System Q: What's the difference between respawn and delete modes? A: Respawn recycles agents at the start; delete removes them when they reach the end. Q: How do I create bidirectional traffic? A: Adjust the direction parameter above 0.5 to make some lanes go opposite directions. Static Systems Questions Stadium System Q: Which distribution type should I use? A: Use On Face for bleachers, On Instance for pre-built seats, On Collection for organized sections, On Vertex for precise seating. Q: How do I make some sections have different agent types? A: Use face attributes or instance attributes to assign different agent collections to different areas. Scatter Systems (On Ground/Curve/Vertex) Q: When should I use On Ground vs On Curve vs On Vertex? A: On Ground for natural crowds, On Curve for lines/queues, On Vertex for precise formations. Q: How do I prevent agents from overlapping? A: Use personal space settings and increase relax iterations. Q: Why are my agents floating or sinking? A: Adjust the up direction parameter and ensure your terrain is properly aligned. Technical Questions Q: How do I improve performance with many agents? A: Reduce pathfinding detail, lower relax iterations, use simpler agent meshes, and limit max agents. Q: Why aren't my agents moving? A: Check that activities are properly assigned, colliders are set up, and speed thresholds are correct. Q: How do I create custom agents? A: Prepare animated meshes with armatures, then add them through the custom agents panel in any system. Q: What does the seed parameter do? A: It ensures reproducible random patterns. Same seed = same agent distribution every time. Q: How do I make agents face different directions? A: Use the random rotation mode or At Object mode with randomization for natural variation. Troubleshooting Q: Agents are passing through each other A: Increase relax iterations and personal space settings. Q: Crowds look too uniform and artificial A: Add rotation randomization, scale variation, and position variation. Q: Simulation is running too fast/slow A: Adjust time scale for need depletion rates and speed scalars for movement speeds. Q: Agents stuck or not pathfinding properly A: Check collision objects, ensure activities are accessible, and increase pathfinding detail.","title":"FAQ"},{"location":"extra/faq/#icrowds-systems-frequently-asked-questions","text":"","title":"iCrowds Systems - Frequently Asked Questions"},{"location":"extra/faq/#general-questions","text":"Q: What's the difference between dynamic and static systems? A: Dynamic systems have moving agents with autonomous behaviors, while static systems place agents in fixed positions for background crowds. Q: What's the maximum number of agents supported? A: Most systems support up to 100,000 agents, but performance depends on your hardware and scene complexity. Q: Can I mix different systems in one scene? A: Yes! Combine systems like Walkers for paths + City for plazas + Stadium for seating areas. Q: How do I control where agents appear? A: Use weight painting, sphere masks, or vertex groups to define density areas.","title":"General Questions"},{"location":"extra/faq/#dynamic-systems-questions","text":"","title":"Dynamic Systems Questions"},{"location":"extra/faq/#city-system","text":"Q: How do agents decide where to go? A: Agents have needs (hunger, sleep, fun, bladder) and pathfind to nearest relevant activities when needs get low. Q: What's the difference between walk and run speeds? A: Below walk speed = idle, between walk/run = walking animation, above run speed = running animation. Q: How does pathfinding detail affect performance? A: Lower values = faster simulation but less precise navigation. Use lower values for large scenes.","title":"City System"},{"location":"extra/faq/#fluid-system","text":"Q: How do flow curves work? A: Agents follow curve tangents. Use Alt+S in edit mode to scale radius and control zone of effect. Q: What's the purpose of relax iterations? A: Higher values prevent agents from passing through each other but cost performance. Q: Can attracters/repelers be animated? A: Yes! Animate the control objects to create dynamic crowd movements.","title":"Fluid System"},{"location":"extra/faq/#walkers-system","text":"Q: What's the difference between respawn and delete modes? A: Respawn recycles agents at the start; delete removes them when they reach the end. Q: How do I create bidirectional traffic? A: Adjust the direction parameter above 0.5 to make some lanes go opposite directions.","title":"Walkers System"},{"location":"extra/faq/#static-systems-questions","text":"","title":"Static Systems Questions"},{"location":"extra/faq/#stadium-system","text":"Q: Which distribution type should I use? A: Use On Face for bleachers, On Instance for pre-built seats, On Collection for organized sections, On Vertex for precise seating. Q: How do I make some sections have different agent types? A: Use face attributes or instance attributes to assign different agent collections to different areas.","title":"Stadium System"},{"location":"extra/faq/#scatter-systems-on-groundcurvevertex","text":"Q: When should I use On Ground vs On Curve vs On Vertex? A: On Ground for natural crowds, On Curve for lines/queues, On Vertex for precise formations. Q: How do I prevent agents from overlapping? A: Use personal space settings and increase relax iterations. Q: Why are my agents floating or sinking? A: Adjust the up direction parameter and ensure your terrain is properly aligned.","title":"Scatter Systems (On Ground/Curve/Vertex)"},{"location":"extra/faq/#technical-questions","text":"Q: How do I improve performance with many agents? A: Reduce pathfinding detail, lower relax iterations, use simpler agent meshes, and limit max agents. Q: Why aren't my agents moving? A: Check that activities are properly assigned, colliders are set up, and speed thresholds are correct. Q: How do I create custom agents? A: Prepare animated meshes with armatures, then add them through the custom agents panel in any system. Q: What does the seed parameter do? A: It ensures reproducible random patterns. Same seed = same agent distribution every time. Q: How do I make agents face different directions? A: Use the random rotation mode or At Object mode with randomization for natural variation.","title":"Technical Questions"},{"location":"extra/faq/#troubleshooting","text":"Q: Agents are passing through each other A: Increase relax iterations and personal space settings. Q: Crowds look too uniform and artificial A: Add rotation randomization, scale variation, and position variation. Q: Simulation is running too fast/slow A: Adjust time scale for need depletion rates and speed scalars for movement speeds. Q: Agents stuck or not pathfinding properly A: Check collision objects, ensure activities are accessible, and increase pathfinding detail.","title":"Troubleshooting"},{"location":"extra/tutorials/","text":"Fill a stadium Import stadium model Static > Stadium Set rows/seats Assign characters Render","title":"Tutorials"},{"location":"extra/tutorials/#fill-a-stadium","text":"Import stadium model Static > Stadium Set rows/seats Assign characters Render","title":"Fill a stadium"},{"location":"static/","text":"iCrowds Static Systems - Complete Overview Static Systems Introduction iCrowds provides four specialized static crowd systems for different placement scenarios. Unlike dynamic systems where agents move autonomously, static systems position agents in fixed arrangements perfect for backgrounds, audiences, and structured crowds. System Comparison Table System Placement Method Best For Key Features Stadium Face/Instance/Collection/Vertex Structured seating Multiple distribution types, section control On Ground Terrain scattering Natural outdoor crowds Singles + Clusters, weight painting On Curve Curve following Lines & queues Radius/count/distance control On Vertex Vertex-based Precise formations Exact positioning, grid patterns 1. Stadium System Purpose Organized seating arrangements for venues and structured environments Distribution Methods On Face : UV-based distribution on surfaces with X/Y count control On Instance : One agent per instanced object (chairs, seats) On Collection : Agents on each object in a collection On Vertex : Precise placement on mesh vertices Key Features Fill Factor : Control overall density (0.0-1.0) Weight Paint : Custom density patterns Attribute Control : Section-based agent assignment Translation : Local/global position adjustments Ideal Use Cases Sports stadiums Theaters and cinemas Conference venues Ceremonial seating 2. On Ground System Purpose Natural-looking scattered crowds for outdoor environments Distribution Types Singles : Individual agents with density control Clusters : Social groups with size and radius variation Key Features Density Control : Overall population density Cluster Variations : Radius, count, and offset controls Sphere Mask : Object-based inclusion zones Personal Space : Automatic collision avoidance Ideal Use Cases Park scenes Outdoor events Public squares Beach crowds 3. On Curve System Purpose Linear formations and queuing simulations Distribution Types Radius Based : Density varies with curve point radius Count Based : Fixed min/max agents per curve Min Distance : Evenly spaced by distance Key Features Curve Editing : Alt+S to adjust radius per point Position Variation : Natural offset from perfect alignment Multiple Curves : Complex formations with multiple paths Length Control : Precise spacing along curves Ideal Use Cases Waiting lines Processional movements Queue simulations Path lining 4. On Vertex System Purpose Exact placement for precise formations and patterns Distribution Method Vertex-based : One agent per mesh vertex Max Agents : Global limit control Exact Positioning : Perfect grid or custom patterns Key Features Mesh Object Input : Any object with vertices Position Variation : Optional randomization offset Vertex Groups : Selective placement areas Precise Control : Pixel-perfect arrangements Ideal Use Cases Military formations Logo spelling Grid patterns Architectural population Common Features Across All Systems Orientation Control Default : Uniform facing direction Random : Natural variation in rotation At Object : All agents face target object Scale Variation Min/Max Scale : Size randomization Seed Control : Reproducible patterns Agent Management Collection Input : Animated agent groups Probability Control : Collection blending Customization : Clothing and appearance changes Performance Features Max Agent Limits : Scene optimization Relax Iterations : Collision quality vs performance Seed Control : Reproducible results Quick Selection Guide Choose Stadium System for: Venues with fixed seating Section-based crowd control Structured audience arrangements Choose On Ground System for: Natural outdoor crowds Social group simulations Organic density variations Choose On Curve System for: Lines and queues Processional movements Path-following crowds Choose On Vertex System for: Precise formations Custom patterns and shapes Exact positioning requirements Workflow Tips Start Simple : Begin with Stadium or On Ground for most common scenarios Use Weight Painting : Create natural density variations in all systems Combine Systems : Mix different systems in one scene for complex crowds Test Scale : Always verify agent sizing matches your scene scale Use Randomization : Apply rotation and scale variations for natural results These four static systems provide comprehensive coverage for all types of crowd placement scenarios, from highly structured venues to natural outdoor gatherings and precise formations.","title":"Overview"},{"location":"static/#icrowds-static-systems-complete-overview","text":"","title":"iCrowds Static Systems - Complete Overview"},{"location":"static/#static-systems-introduction","text":"iCrowds provides four specialized static crowd systems for different placement scenarios. Unlike dynamic systems where agents move autonomously, static systems position agents in fixed arrangements perfect for backgrounds, audiences, and structured crowds.","title":"Static Systems Introduction"},{"location":"static/#system-comparison-table","text":"System Placement Method Best For Key Features Stadium Face/Instance/Collection/Vertex Structured seating Multiple distribution types, section control On Ground Terrain scattering Natural outdoor crowds Singles + Clusters, weight painting On Curve Curve following Lines & queues Radius/count/distance control On Vertex Vertex-based Precise formations Exact positioning, grid patterns","title":"System Comparison Table"},{"location":"static/#1-stadium-system","text":"","title":"1. Stadium System"},{"location":"static/#purpose","text":"Organized seating arrangements for venues and structured environments","title":"Purpose"},{"location":"static/#distribution-methods","text":"On Face : UV-based distribution on surfaces with X/Y count control On Instance : One agent per instanced object (chairs, seats) On Collection : Agents on each object in a collection On Vertex : Precise placement on mesh vertices","title":"Distribution Methods"},{"location":"static/#key-features","text":"Fill Factor : Control overall density (0.0-1.0) Weight Paint : Custom density patterns Attribute Control : Section-based agent assignment Translation : Local/global position adjustments","title":"Key Features"},{"location":"static/#ideal-use-cases","text":"Sports stadiums Theaters and cinemas Conference venues Ceremonial seating","title":"Ideal Use Cases"},{"location":"static/#2-on-ground-system","text":"","title":"2. On Ground System"},{"location":"static/#purpose_1","text":"Natural-looking scattered crowds for outdoor environments","title":"Purpose"},{"location":"static/#distribution-types","text":"Singles : Individual agents with density control Clusters : Social groups with size and radius variation","title":"Distribution Types"},{"location":"static/#key-features_1","text":"Density Control : Overall population density Cluster Variations : Radius, count, and offset controls Sphere Mask : Object-based inclusion zones Personal Space : Automatic collision avoidance","title":"Key Features"},{"location":"static/#ideal-use-cases_1","text":"Park scenes Outdoor events Public squares Beach crowds","title":"Ideal Use Cases"},{"location":"static/#3-on-curve-system","text":"","title":"3. On Curve System"},{"location":"static/#purpose_2","text":"Linear formations and queuing simulations","title":"Purpose"},{"location":"static/#distribution-types_1","text":"Radius Based : Density varies with curve point radius Count Based : Fixed min/max agents per curve Min Distance : Evenly spaced by distance","title":"Distribution Types"},{"location":"static/#key-features_2","text":"Curve Editing : Alt+S to adjust radius per point Position Variation : Natural offset from perfect alignment Multiple Curves : Complex formations with multiple paths Length Control : Precise spacing along curves","title":"Key Features"},{"location":"static/#ideal-use-cases_2","text":"Waiting lines Processional movements Queue simulations Path lining","title":"Ideal Use Cases"},{"location":"static/#4-on-vertex-system","text":"","title":"4. On Vertex System"},{"location":"static/#purpose_3","text":"Exact placement for precise formations and patterns","title":"Purpose"},{"location":"static/#distribution-method","text":"Vertex-based : One agent per mesh vertex Max Agents : Global limit control Exact Positioning : Perfect grid or custom patterns","title":"Distribution Method"},{"location":"static/#key-features_3","text":"Mesh Object Input : Any object with vertices Position Variation : Optional randomization offset Vertex Groups : Selective placement areas Precise Control : Pixel-perfect arrangements","title":"Key Features"},{"location":"static/#ideal-use-cases_3","text":"Military formations Logo spelling Grid patterns Architectural population","title":"Ideal Use Cases"},{"location":"static/#common-features-across-all-systems","text":"","title":"Common Features Across All Systems"},{"location":"static/#orientation-control","text":"Default : Uniform facing direction Random : Natural variation in rotation At Object : All agents face target object","title":"Orientation Control"},{"location":"static/#scale-variation","text":"Min/Max Scale : Size randomization Seed Control : Reproducible patterns","title":"Scale Variation"},{"location":"static/#agent-management","text":"Collection Input : Animated agent groups Probability Control : Collection blending Customization : Clothing and appearance changes","title":"Agent Management"},{"location":"static/#performance-features","text":"Max Agent Limits : Scene optimization Relax Iterations : Collision quality vs performance Seed Control : Reproducible results","title":"Performance Features"},{"location":"static/#quick-selection-guide","text":"","title":"Quick Selection Guide"},{"location":"static/#choose-stadium-system-for","text":"Venues with fixed seating Section-based crowd control Structured audience arrangements","title":"Choose Stadium System for:"},{"location":"static/#choose-on-ground-system-for","text":"Natural outdoor crowds Social group simulations Organic density variations","title":"Choose On Ground System for:"},{"location":"static/#choose-on-curve-system-for","text":"Lines and queues Processional movements Path-following crowds","title":"Choose On Curve System for:"},{"location":"static/#choose-on-vertex-system-for","text":"Precise formations Custom patterns and shapes Exact positioning requirements","title":"Choose On Vertex System for:"},{"location":"static/#workflow-tips","text":"Start Simple : Begin with Stadium or On Ground for most common scenarios Use Weight Painting : Create natural density variations in all systems Combine Systems : Mix different systems in one scene for complex crowds Test Scale : Always verify agent sizing matches your scene scale Use Randomization : Apply rotation and scale variations for natural results These four static systems provide comprehensive coverage for all types of crowd placement scenarios, from highly structured venues to natural outdoor gatherings and precise formations.","title":"Workflow Tips"},{"location":"static/stadium/","text":"Stadium iCrowd System - User Documentation Overview The Stadium System creates organized, static crowds for structured environments like stadiums, theaters, and auditoriums. Distribution Tab Distribution Types 1. On Face Requires : A face with UV mapping (recmmend adding a plane and miving it around) Function : Distributes agents across a surface Controls : Count X : Number of agents horizontally Count Y : Number of agents vertically Best for : Large seating areas and bleachers 2. On Instance Function : Places one agent on each instanced object Example : Geometry nodes stadium with instanced chairs Use case : Pre-arranged seating layouts 3. On Collection Objects Function : Places agents on each object in a collection Input : Collection of seats or chairs Use case : Organized seating sections 4. On Vertex Function : Places agents on mesh vertices Setup : Subdivide face to create vertex points Use case : Precise positioning control Distribution Controls Fill Settings Factor : 1.000 - Controls fill density (0.000 to 1.000) Seed : 0 - Randomization seed for fill pattern Weight Paint Brush Tool : Paint custom density patterns Vertex Group Mask : Use vertex weights for density control Application : Create uneven crowd distribution Translation Mode : Local or Global transform space X, Y, Z : 0m - Fine-tune agent positioning Use : Adjust agent placement offsets Settings Tab Orientation & Scale Default Behavior Rotation : Agents face -Y direction by default Adjustment : Modify X, Y, Z rotation angles (default: 0\u00b0) Scale : Control agent size (X:1.000, Y:1.000, Z:1.000) Rotation Types Default Fixed rotation as specified Consistent facing direction Randomize Random rotation per agent Control : Adjust randomization range Use : Natural-looking varied crowd At Object All agents face toward target object Optional : Add randomization to object-facing Use : Audience facing stage/screen Agent Configuration Input Collections Animated Agents : Collections with idle animations Multiple Collections : Support for varied agent types Probability Control Method 1 : Slider-based probability per collection Method 2 : Attribute-based assignment Face Attributes : Control by UV face data Instance Attributes : Control by instance properties Example : Different agent types for different seating sections Customization Custom Collections : Import additional agent types Clothing Changes : Modify agent appearances Collection Probability : Balance appearance rates Typical Workflow Setup Distribution Choose distribution type based on seating layout Set fill factor for crowd density Use weight paint for selective density Configure Orientation Set default rotation or choose random/object-facing Adjust scale if needed Assign Agents Select agent collections Set probabilities via slider or attributes Add custom agents if required Fine-tune Adjust translations for precise positioning Tune rotation randomization Balance collection probabilities Best Practices Use On Collection Objects for pre-built stadium seats Use On Face with weight paint for organic crowd patterns Combine At Object rotation with slight randomization for natural audiences Use face/instance attributes for section-based crowd variety Start with lower fill factors and increase as needed Use Cases Sports stadium crowds Theater and cinema audiences Conference and event seating Concert venues Graduation ceremonies","title":"Stadium"},{"location":"static/stadium/#stadium-icrowd-system-user-documentation","text":"","title":"Stadium iCrowd System - User Documentation"},{"location":"static/stadium/#overview","text":"The Stadium System creates organized, static crowds for structured environments like stadiums, theaters, and auditoriums.","title":"Overview"},{"location":"static/stadium/#distribution-tab","text":"","title":"Distribution Tab"},{"location":"static/stadium/#distribution-types","text":"","title":"Distribution Types"},{"location":"static/stadium/#1-on-face","text":"Requires : A face with UV mapping (recmmend adding a plane and miving it around) Function : Distributes agents across a surface Controls : Count X : Number of agents horizontally Count Y : Number of agents vertically Best for : Large seating areas and bleachers","title":"1. On Face"},{"location":"static/stadium/#2-on-instance","text":"Function : Places one agent on each instanced object Example : Geometry nodes stadium with instanced chairs Use case : Pre-arranged seating layouts","title":"2. On Instance"},{"location":"static/stadium/#3-on-collection-objects","text":"Function : Places agents on each object in a collection Input : Collection of seats or chairs Use case : Organized seating sections","title":"3. On Collection Objects"},{"location":"static/stadium/#4-on-vertex","text":"Function : Places agents on mesh vertices Setup : Subdivide face to create vertex points Use case : Precise positioning control","title":"4. On Vertex"},{"location":"static/stadium/#distribution-controls","text":"","title":"Distribution Controls"},{"location":"static/stadium/#fill-settings","text":"Factor : 1.000 - Controls fill density (0.000 to 1.000) Seed : 0 - Randomization seed for fill pattern","title":"Fill Settings"},{"location":"static/stadium/#weight-paint","text":"Brush Tool : Paint custom density patterns Vertex Group Mask : Use vertex weights for density control Application : Create uneven crowd distribution","title":"Weight Paint"},{"location":"static/stadium/#translation","text":"Mode : Local or Global transform space X, Y, Z : 0m - Fine-tune agent positioning Use : Adjust agent placement offsets","title":"Translation"},{"location":"static/stadium/#settings-tab","text":"","title":"Settings Tab"},{"location":"static/stadium/#orientation-scale","text":"","title":"Orientation &amp; Scale"},{"location":"static/stadium/#default-behavior","text":"Rotation : Agents face -Y direction by default Adjustment : Modify X, Y, Z rotation angles (default: 0\u00b0) Scale : Control agent size (X:1.000, Y:1.000, Z:1.000)","title":"Default Behavior"},{"location":"static/stadium/#rotation-types","text":"Default Fixed rotation as specified Consistent facing direction Randomize Random rotation per agent Control : Adjust randomization range Use : Natural-looking varied crowd At Object All agents face toward target object Optional : Add randomization to object-facing Use : Audience facing stage/screen","title":"Rotation Types"},{"location":"static/stadium/#agent-configuration","text":"","title":"Agent Configuration"},{"location":"static/stadium/#input-collections","text":"Animated Agents : Collections with idle animations Multiple Collections : Support for varied agent types","title":"Input Collections"},{"location":"static/stadium/#probability-control","text":"Method 1 : Slider-based probability per collection Method 2 : Attribute-based assignment Face Attributes : Control by UV face data Instance Attributes : Control by instance properties Example : Different agent types for different seating sections","title":"Probability Control"},{"location":"static/stadium/#customization","text":"Custom Collections : Import additional agent types Clothing Changes : Modify agent appearances Collection Probability : Balance appearance rates","title":"Customization"},{"location":"static/stadium/#typical-workflow","text":"Setup Distribution Choose distribution type based on seating layout Set fill factor for crowd density Use weight paint for selective density Configure Orientation Set default rotation or choose random/object-facing Adjust scale if needed Assign Agents Select agent collections Set probabilities via slider or attributes Add custom agents if required Fine-tune Adjust translations for precise positioning Tune rotation randomization Balance collection probabilities","title":"Typical Workflow"},{"location":"static/stadium/#best-practices","text":"Use On Collection Objects for pre-built stadium seats Use On Face with weight paint for organic crowd patterns Combine At Object rotation with slight randomization for natural audiences Use face/instance attributes for section-based crowd variety Start with lower fill factors and increase as needed","title":"Best Practices"},{"location":"static/stadium/#use-cases","text":"Sports stadium crowds Theater and cinema audiences Conference and event seating Concert venues Graduation ceremonies","title":"Use Cases"},{"location":"static/scatter/curve/","text":"On Curve iCrowd System - User Documentation Overview The On Curve System creates organized lines and queues of agents following curve paths, ideal for simulating waiting lines, processional movements, and structured formations. Distribution Tab Basic Setup View Mode : Render - Standard visualization mode Terrain : On Curve Terrain - Input terrain for ground alignment Distribution Types 1. Radius Based Distribution Agents distributed around curve points based on radius - Radius Control : Edit curve points in Edit Mode and use Alt+S to scale radius at each point - Radius Multiplier : 512.000 - Global multiplier for all radius values - Effect : More agents in areas with larger radius values 2. Count Based Distribution Fixed number of agents per curve - Min (Per Curve) : 50 - Minimum agents per curve - Max (Per Curve) : 100 - Maximum agents per curve - System : Randomly selects between min/max for each curve 3. Min Distance Distribution Agents spaced by minimum distance - Length : 0.2 m - Minimum spacing between agents - Use : Evenly spaced queues and lines Global Limits Max Agents Num : 100,000.000 - Total maximum agents in system Positioning Controls Personal Space Relax Iterations : 12 - Processing passes for collision resolution Min Distance : 0.500 m - Minimum space between agents Max Distance : 1.000 m - Maximum personal buffer Seed : 2 - Randomization pattern Position Variation Position Variation : 2.934 - Random offset from perfect curve alignment Seed : 86 - Randomization pattern Effect : Creates natural, imperfect lines instead of perfect grid Settings Tab Orientation Control Rotation Modes Default Consistent facing direction Uniform appearance along curves Randomize Random rotation per agent Natural variation in facing directions At Object All agents face toward target object Optional randomization for natural look Up Direction Value : 1.000 - Controls alignment with terrain normals Function : Keeps agents properly oriented to ground surface Adjustment : Higher values increase terrain following Scale Variation Min Scale : 0.900 - Smallest agent size Max Scale : 1.000 - Largest agent size Seed : 0 - Randomization pattern Effect : Natural size variation in crowd Agent Configuration Input Requirements Animated Agents : Collections with idle animations Multiple Collections : Support for varied agent types Probability Control : Balance between different agent collections Customization Custom Collections : Import additional agent types Clothing Variations : Modify agent appearances Collection Blending : Mix different agent types Curve Editing Guide Radius-Based Setup Select curve object Enter Edit Mode (Tab) Select curve points where you want more agents Press Alt+S and drag to increase radius Larger radius = more agents around that point Curve Types Open Curves : Lines and queues Closed Curves : Circular formations and surrounding areas Multiple Curves : Complex formations and multiple lines Typical Workflow Curve Creation Draw curves representing desired lines or formations Adjust radius at key points for density variation Set curve object in distribution panel Distribution Setup Choose distribution type (Radius/Count/Min Distance) Set agent limits and spacing parameters Adjust position variation for natural look Orientation & Scale Set rotation mode based on scene needs Adjust up direction for proper ground alignment Configure scale variations Agent Assignment Select agent collections Balance probabilities between collections Fine-tune appearance variations Best Practices For Realistic Lines Use position variation to avoid perfect grid patterns Combine min distance with personal space for natural spacing Use radius based for areas needing higher density Apply slight scale variation for diverse crowds Curve Setup Tips Use smoother curves for more natural agent distribution Adjust radius gradually for smooth density transitions Test different distribution types for each scene need Use multiple simple curves instead of one complex curve Performance Optimization Use appropriate relax iterations (12 is good for quality) Set realistic max agent counts Balance position variation with performance needs Use simpler curves for large-scale simulations Use Cases Waiting lines for attractions, security, or ticketing Processional movements in ceremonies or events Queue simulations for retail or services Formation patterns for military or performance groups Surrounding areas around objects or stages Path lining for parades or special events The On Curve System provides precise control over linear and curved formations, making it ideal for any scenario requiring organized lines, queues, or structured crowd arrangements.","title":"Scatter on Curve"},{"location":"static/scatter/curve/#on-curve-icrowd-system-user-documentation","text":"","title":"On Curve iCrowd System - User Documentation"},{"location":"static/scatter/curve/#overview","text":"The On Curve System creates organized lines and queues of agents following curve paths, ideal for simulating waiting lines, processional movements, and structured formations.","title":"Overview"},{"location":"static/scatter/curve/#distribution-tab","text":"","title":"Distribution Tab"},{"location":"static/scatter/curve/#basic-setup","text":"View Mode : Render - Standard visualization mode Terrain : On Curve Terrain - Input terrain for ground alignment","title":"Basic Setup"},{"location":"static/scatter/curve/#distribution-types","text":"","title":"Distribution Types"},{"location":"static/scatter/curve/#1-radius-based-distribution","text":"Agents distributed around curve points based on radius - Radius Control : Edit curve points in Edit Mode and use Alt+S to scale radius at each point - Radius Multiplier : 512.000 - Global multiplier for all radius values - Effect : More agents in areas with larger radius values","title":"1. Radius Based Distribution"},{"location":"static/scatter/curve/#2-count-based-distribution","text":"Fixed number of agents per curve - Min (Per Curve) : 50 - Minimum agents per curve - Max (Per Curve) : 100 - Maximum agents per curve - System : Randomly selects between min/max for each curve","title":"2. Count Based Distribution"},{"location":"static/scatter/curve/#3-min-distance-distribution","text":"Agents spaced by minimum distance - Length : 0.2 m - Minimum spacing between agents - Use : Evenly spaced queues and lines","title":"3. Min Distance Distribution"},{"location":"static/scatter/curve/#global-limits","text":"Max Agents Num : 100,000.000 - Total maximum agents in system","title":"Global Limits"},{"location":"static/scatter/curve/#positioning-controls","text":"","title":"Positioning Controls"},{"location":"static/scatter/curve/#personal-space","text":"Relax Iterations : 12 - Processing passes for collision resolution Min Distance : 0.500 m - Minimum space between agents Max Distance : 1.000 m - Maximum personal buffer Seed : 2 - Randomization pattern","title":"Personal Space"},{"location":"static/scatter/curve/#position-variation","text":"Position Variation : 2.934 - Random offset from perfect curve alignment Seed : 86 - Randomization pattern Effect : Creates natural, imperfect lines instead of perfect grid","title":"Position Variation"},{"location":"static/scatter/curve/#settings-tab","text":"","title":"Settings Tab"},{"location":"static/scatter/curve/#orientation-control","text":"","title":"Orientation Control"},{"location":"static/scatter/curve/#rotation-modes","text":"Default Consistent facing direction Uniform appearance along curves Randomize Random rotation per agent Natural variation in facing directions At Object All agents face toward target object Optional randomization for natural look","title":"Rotation Modes"},{"location":"static/scatter/curve/#up-direction","text":"Value : 1.000 - Controls alignment with terrain normals Function : Keeps agents properly oriented to ground surface Adjustment : Higher values increase terrain following","title":"Up Direction"},{"location":"static/scatter/curve/#scale-variation","text":"Min Scale : 0.900 - Smallest agent size Max Scale : 1.000 - Largest agent size Seed : 0 - Randomization pattern Effect : Natural size variation in crowd","title":"Scale Variation"},{"location":"static/scatter/curve/#agent-configuration","text":"","title":"Agent Configuration"},{"location":"static/scatter/curve/#input-requirements","text":"Animated Agents : Collections with idle animations Multiple Collections : Support for varied agent types Probability Control : Balance between different agent collections","title":"Input Requirements"},{"location":"static/scatter/curve/#customization","text":"Custom Collections : Import additional agent types Clothing Variations : Modify agent appearances Collection Blending : Mix different agent types","title":"Customization"},{"location":"static/scatter/curve/#curve-editing-guide","text":"","title":"Curve Editing Guide"},{"location":"static/scatter/curve/#radius-based-setup","text":"Select curve object Enter Edit Mode (Tab) Select curve points where you want more agents Press Alt+S and drag to increase radius Larger radius = more agents around that point","title":"Radius-Based Setup"},{"location":"static/scatter/curve/#curve-types","text":"Open Curves : Lines and queues Closed Curves : Circular formations and surrounding areas Multiple Curves : Complex formations and multiple lines","title":"Curve Types"},{"location":"static/scatter/curve/#typical-workflow","text":"Curve Creation Draw curves representing desired lines or formations Adjust radius at key points for density variation Set curve object in distribution panel Distribution Setup Choose distribution type (Radius/Count/Min Distance) Set agent limits and spacing parameters Adjust position variation for natural look Orientation & Scale Set rotation mode based on scene needs Adjust up direction for proper ground alignment Configure scale variations Agent Assignment Select agent collections Balance probabilities between collections Fine-tune appearance variations","title":"Typical Workflow"},{"location":"static/scatter/curve/#best-practices","text":"","title":"Best Practices"},{"location":"static/scatter/curve/#for-realistic-lines","text":"Use position variation to avoid perfect grid patterns Combine min distance with personal space for natural spacing Use radius based for areas needing higher density Apply slight scale variation for diverse crowds","title":"For Realistic Lines"},{"location":"static/scatter/curve/#curve-setup-tips","text":"Use smoother curves for more natural agent distribution Adjust radius gradually for smooth density transitions Test different distribution types for each scene need Use multiple simple curves instead of one complex curve","title":"Curve Setup Tips"},{"location":"static/scatter/curve/#performance-optimization","text":"Use appropriate relax iterations (12 is good for quality) Set realistic max agent counts Balance position variation with performance needs Use simpler curves for large-scale simulations","title":"Performance Optimization"},{"location":"static/scatter/curve/#use-cases","text":"Waiting lines for attractions, security, or ticketing Processional movements in ceremonies or events Queue simulations for retail or services Formation patterns for military or performance groups Surrounding areas around objects or stages Path lining for parades or special events The On Curve System provides precise control over linear and curved formations, making it ideal for any scenario requiring organized lines, queues, or structured crowd arrangements.","title":"Use Cases"},{"location":"static/scatter/ground/","text":"On Ground iCrowd System - User Documentation Overview The On Ground System creates natural-looking static crowds scattered across terrain, perfect for park scenes, outdoor events, queues, and social gatherings with both individual agents and social groups. Distribution Tab Basic Setup View Mode : Render - Standard visualization Terrain : On Ground Terrain - Input terrain collection for agent placement Distribution Types 1. Singles Individual scattered agents - Density : 0.200 - Overall density of individual agents - Min Distance : 1m - Minimum spacing between single agents - Seed : 1 - Randomization pattern - Max Agents : 100,000.000 - Maximum number limit 2. Clusters Social groups and clusters - Density : 0.060 - Density of cluster centers - Min Distance : 6.39m - Spacing between different clusters - Seed : 0 - Randomization pattern - Max Clusters : 100,000.000 - Maximum cluster count Distribution Controls Weight Painting Brush Tool : Paint density variations directly on terrain Vertex Group Mask : Use predefined vertex groups for density control Application : Create natural density variations like pathways vs open areas Sphere Mask Sphere Object : Use sphere objects to define inclusion/exclusion zones Edit : Modify sphere position and radius for precise area control Personal Space System Relax Iterations : 12 - Processing passes for collision resolution Min Distance : 0.500m - Minimum personal space between agents Max Distance : 1.000m - Maximum personal space buffer Seed : 0 - Randomization for personal space variation Cluster Variations Radius Settings Min Radius : 0.000m - Smallest cluster size Max Radius : 1.000m - Largest cluster size Seed : 6 - Randomization pattern Relax Iterations : 1.329 - Cluster formation quality Noise : 1.000 - Natural variation in cluster shapes Population Settings Min Count : 5 - Minimum agents per cluster Max Count : 12 - Maximum agents per cluster Seed : 0 - Randomization for cluster sizes Placement Settings Offset : Random positioning variation within clusters Creates : More organic, natural-looking group formations Settings Tab Orientation Control Rotation Modes Default Consistent facing direction across all agents Uniform crowd appearance Randomize Random rotation per agent Natural-looking varied crowd Control : Adjust randomization intensity At Object All agents face toward target object Optional : Add randomization for natural variation Use : Crowds facing a stage, speaker, or point of interest Scale Variations Size Randomization : Control agent size variations Natural Variation : Avoid uniform, artificial appearance Scale Range : Adjust minimum and maximum size parameters Agent Configuration Input Requirements Animated Agents : Collections with idle animations Multiple Collections : Support for varied agent types Probability Control : Balance between different agent collections Customization Custom Collections : Import additional agent types Clothing Variations : Modify agent appearances within collections Collection Blending : Mix different agent types naturally Typical Workflow Terrain Setup Prepare ground terrain collection Define areas using weight painting or sphere masks Singles Distribution Set density for individual agents Adjust personal space for natural spacing Use weight painting for area-specific density Clusters Setup Configure cluster density and spacing Set cluster size variations (radius and population) Adjust cluster formation parameters Orientation & Scale Choose rotation mode based on scene needs Set scale variations for natural appearance Fine-tune facing directions Agent Assignment Select agent collections Balance probabilities between collections Add custom agents if needed Best Practices For Realistic Results Use Singles for background crowds and individuals Use Clusters for social groups and gatherings Combine both types for most natural scenes Use weight painting to follow terrain features and paths Apply personal space to prevent agent overlapping Performance Optimization Start with lower densities and increase gradually Use appropriate relax iterations (higher = better quality but slower) Balance cluster counts with scene complexity Use sphere masks to limit calculations to visible areas Natural Appearance Tips Use random rotation with moderate variation Apply scale variations for diverse crowd Mix cluster sizes for organic social groups Use noise and offset for irregular cluster shapes Use Cases Park scenes with people sitting and standing Outdoor events like concerts or festivals Queue simulations for attractions or services Public squares and gathering places Beach scenes with scattered groups Marketplaces and social spaces The On Ground System creates the most organic and natural-looking static crowds, ideal for environments where people gather informally and social dynamics are important.","title":"Scatter on Ground"},{"location":"static/scatter/ground/#on-ground-icrowd-system-user-documentation","text":"","title":"On Ground iCrowd System - User Documentation"},{"location":"static/scatter/ground/#overview","text":"The On Ground System creates natural-looking static crowds scattered across terrain, perfect for park scenes, outdoor events, queues, and social gatherings with both individual agents and social groups.","title":"Overview"},{"location":"static/scatter/ground/#distribution-tab","text":"","title":"Distribution Tab"},{"location":"static/scatter/ground/#basic-setup","text":"View Mode : Render - Standard visualization Terrain : On Ground Terrain - Input terrain collection for agent placement","title":"Basic Setup"},{"location":"static/scatter/ground/#distribution-types","text":"","title":"Distribution Types"},{"location":"static/scatter/ground/#1-singles","text":"Individual scattered agents - Density : 0.200 - Overall density of individual agents - Min Distance : 1m - Minimum spacing between single agents - Seed : 1 - Randomization pattern - Max Agents : 100,000.000 - Maximum number limit","title":"1. Singles"},{"location":"static/scatter/ground/#2-clusters","text":"Social groups and clusters - Density : 0.060 - Density of cluster centers - Min Distance : 6.39m - Spacing between different clusters - Seed : 0 - Randomization pattern - Max Clusters : 100,000.000 - Maximum cluster count","title":"2. Clusters"},{"location":"static/scatter/ground/#distribution-controls","text":"","title":"Distribution Controls"},{"location":"static/scatter/ground/#weight-painting","text":"Brush Tool : Paint density variations directly on terrain Vertex Group Mask : Use predefined vertex groups for density control Application : Create natural density variations like pathways vs open areas","title":"Weight Painting"},{"location":"static/scatter/ground/#sphere-mask","text":"Sphere Object : Use sphere objects to define inclusion/exclusion zones Edit : Modify sphere position and radius for precise area control","title":"Sphere Mask"},{"location":"static/scatter/ground/#personal-space-system","text":"Relax Iterations : 12 - Processing passes for collision resolution Min Distance : 0.500m - Minimum personal space between agents Max Distance : 1.000m - Maximum personal space buffer Seed : 0 - Randomization for personal space variation","title":"Personal Space System"},{"location":"static/scatter/ground/#cluster-variations","text":"","title":"Cluster Variations"},{"location":"static/scatter/ground/#radius-settings","text":"Min Radius : 0.000m - Smallest cluster size Max Radius : 1.000m - Largest cluster size Seed : 6 - Randomization pattern Relax Iterations : 1.329 - Cluster formation quality Noise : 1.000 - Natural variation in cluster shapes","title":"Radius Settings"},{"location":"static/scatter/ground/#population-settings","text":"Min Count : 5 - Minimum agents per cluster Max Count : 12 - Maximum agents per cluster Seed : 0 - Randomization for cluster sizes","title":"Population Settings"},{"location":"static/scatter/ground/#placement-settings","text":"Offset : Random positioning variation within clusters Creates : More organic, natural-looking group formations","title":"Placement Settings"},{"location":"static/scatter/ground/#settings-tab","text":"","title":"Settings Tab"},{"location":"static/scatter/ground/#orientation-control","text":"","title":"Orientation Control"},{"location":"static/scatter/ground/#rotation-modes","text":"Default Consistent facing direction across all agents Uniform crowd appearance Randomize Random rotation per agent Natural-looking varied crowd Control : Adjust randomization intensity At Object All agents face toward target object Optional : Add randomization for natural variation Use : Crowds facing a stage, speaker, or point of interest","title":"Rotation Modes"},{"location":"static/scatter/ground/#scale-variations","text":"Size Randomization : Control agent size variations Natural Variation : Avoid uniform, artificial appearance Scale Range : Adjust minimum and maximum size parameters","title":"Scale Variations"},{"location":"static/scatter/ground/#agent-configuration","text":"","title":"Agent Configuration"},{"location":"static/scatter/ground/#input-requirements","text":"Animated Agents : Collections with idle animations Multiple Collections : Support for varied agent types Probability Control : Balance between different agent collections","title":"Input Requirements"},{"location":"static/scatter/ground/#customization","text":"Custom Collections : Import additional agent types Clothing Variations : Modify agent appearances within collections Collection Blending : Mix different agent types naturally","title":"Customization"},{"location":"static/scatter/ground/#typical-workflow","text":"Terrain Setup Prepare ground terrain collection Define areas using weight painting or sphere masks Singles Distribution Set density for individual agents Adjust personal space for natural spacing Use weight painting for area-specific density Clusters Setup Configure cluster density and spacing Set cluster size variations (radius and population) Adjust cluster formation parameters Orientation & Scale Choose rotation mode based on scene needs Set scale variations for natural appearance Fine-tune facing directions Agent Assignment Select agent collections Balance probabilities between collections Add custom agents if needed","title":"Typical Workflow"},{"location":"static/scatter/ground/#best-practices","text":"","title":"Best Practices"},{"location":"static/scatter/ground/#for-realistic-results","text":"Use Singles for background crowds and individuals Use Clusters for social groups and gatherings Combine both types for most natural scenes Use weight painting to follow terrain features and paths Apply personal space to prevent agent overlapping","title":"For Realistic Results"},{"location":"static/scatter/ground/#performance-optimization","text":"Start with lower densities and increase gradually Use appropriate relax iterations (higher = better quality but slower) Balance cluster counts with scene complexity Use sphere masks to limit calculations to visible areas","title":"Performance Optimization"},{"location":"static/scatter/ground/#natural-appearance-tips","text":"Use random rotation with moderate variation Apply scale variations for diverse crowd Mix cluster sizes for organic social groups Use noise and offset for irregular cluster shapes","title":"Natural Appearance Tips"},{"location":"static/scatter/ground/#use-cases","text":"Park scenes with people sitting and standing Outdoor events like concerts or festivals Queue simulations for attractions or services Public squares and gathering places Beach scenes with scattered groups Marketplaces and social spaces The On Ground System creates the most organic and natural-looking static crowds, ideal for environments where people gather informally and social dynamics are important.","title":"Use Cases"},{"location":"static/scatter/vertex/","text":"On Vertex iCrowd System - User Documentation Overview The On Vertex System precisely places agents on mesh vertices, providing exact control over agent positioning for structured arrangements and specific placement requirements. Distribution Tab Basic Setup View Mode : Render - Standard visualization mode Terrain : On Curve Terrain - Ground surface for agent alignment Vertex Distribution Mesh Object : Input the object containing vertices for agent placement Distribution : One agent per vertex (On vertex distribution) Max Agents Num : 100,000.000 - Total maximum agents in system Positioning Controls Personal Space Relax Iterations : 12 - Processing passes for collision resolution Min Distance : 0.500 m - Minimum space between agents Max Distance : 1.000 m - Maximum personal buffer Seed : 0 - Randomization pattern Position Variation Position Variation : 0.000 - Random offset from exact vertex positions Seed : 0 - Randomization pattern Usage : Add imperfection to avoid overly perfect grid patterns Settings Tab Orientation Control Rotation Modes Default Consistent facing direction for all agents Uniform appearance across vertex points Random Random rotation per agent Creates natural variation in facing directions At Object All agents face toward a target object Useful for crowds facing a stage or point of interest Up Direction Default : Automatic alignment with terrain normals Function : Ensures agents stand properly on ground surface Adjustment : Can be modified for special orientation needs Scale Variation Min Scale : 0.900 - Smallest agent size (90% of normal) Max Scale : 1.000 - Largest agent size (100% of normal) Seed : 0 - Randomization pattern for size variation Effect : Creates natural size diversity in the crowd Agent Configuration Input Requirements Animated Agents : Collections with idle animations Multiple Collections : Support for varied agent types Probability Control : Balance between different agent collections Customization Custom Collections : Import additional agent types Clothing Variations : Modify agent appearances Collection Blending : Mix different agent types naturally Mesh Preparation Guide Optimal Vertex Setup Even Distribution : Vertices should be evenly spaced for consistent agent placement Density Control : More vertices = more agents in that area Mesh Types : Works with any mesh object containing vertices Vertex Groups : Use vertex groups for selective agent placement Creating Vertex Patterns Grid Meshes : For organized, grid-like formations Scattered Points : For random but controlled placement Custom Shapes : Arrange vertices in specific patterns or logos Typical Workflow Mesh Preparation Create or select mesh with desired vertex arrangement Ensure vertex density matches required agent density Use vertex groups for area-specific control Distribution Setup Input mesh object into distribution panel Set maximum agent count if needed Adjust position variation for natural imperfection Spacing Configuration Set personal space parameters Adjust relax iterations for collision quality Fine-tune min/max distances Orientation & Scale Choose rotation mode based on scene requirements Set scale variation for natural size diversity Configure up direction for proper ground alignment Agent Assignment Select agent collections Balance probabilities between collections Apply customizations as needed Best Practices For Precise Placement Use position variation 0.000 for exact vertex alignment Create custom vertex layouts for specific formations Use relax iterations to prevent agent overlapping Combine with vertex groups for complex placement patterns Mesh Optimization Use appropriate vertex density for required agent count Avoid overly dense meshes unless high agent count is needed Use simple meshes for large-scale simulations Test different mesh types for various formation needs Natural Appearance Tips Use random rotation with vertex-based placement Apply scale variation to avoid uniform look Use slight position variation to break perfect patterns Mix agent collections for visual diversity Use Cases Stadium Seating : Precise seat-by-seat placement Military Formations : Exact positional arrangements Theater Audiences : Controlled seating patterns Ceremonial Events : Structured participant placement Architectural Visualization : Precise population of spaces Logo Formations : Spelling out words or shapes with agents Grid Patterns : Organized displays and exhibitions The On Vertex System provides the most precise control over agent positioning, making it ideal for scenarios requiring exact placement, structured formations, or specific spatial arrangements where vertex-level accuracy is essential.","title":"Scatter on Vertex"},{"location":"static/scatter/vertex/#on-vertex-icrowd-system-user-documentation","text":"","title":"On Vertex iCrowd System - User Documentation"},{"location":"static/scatter/vertex/#overview","text":"The On Vertex System precisely places agents on mesh vertices, providing exact control over agent positioning for structured arrangements and specific placement requirements.","title":"Overview"},{"location":"static/scatter/vertex/#distribution-tab","text":"","title":"Distribution Tab"},{"location":"static/scatter/vertex/#basic-setup","text":"View Mode : Render - Standard visualization mode Terrain : On Curve Terrain - Ground surface for agent alignment","title":"Basic Setup"},{"location":"static/scatter/vertex/#vertex-distribution","text":"Mesh Object : Input the object containing vertices for agent placement Distribution : One agent per vertex (On vertex distribution) Max Agents Num : 100,000.000 - Total maximum agents in system","title":"Vertex Distribution"},{"location":"static/scatter/vertex/#positioning-controls","text":"","title":"Positioning Controls"},{"location":"static/scatter/vertex/#personal-space","text":"Relax Iterations : 12 - Processing passes for collision resolution Min Distance : 0.500 m - Minimum space between agents Max Distance : 1.000 m - Maximum personal buffer Seed : 0 - Randomization pattern","title":"Personal Space"},{"location":"static/scatter/vertex/#position-variation","text":"Position Variation : 0.000 - Random offset from exact vertex positions Seed : 0 - Randomization pattern Usage : Add imperfection to avoid overly perfect grid patterns","title":"Position Variation"},{"location":"static/scatter/vertex/#settings-tab","text":"","title":"Settings Tab"},{"location":"static/scatter/vertex/#orientation-control","text":"","title":"Orientation Control"},{"location":"static/scatter/vertex/#rotation-modes","text":"Default Consistent facing direction for all agents Uniform appearance across vertex points Random Random rotation per agent Creates natural variation in facing directions At Object All agents face toward a target object Useful for crowds facing a stage or point of interest","title":"Rotation Modes"},{"location":"static/scatter/vertex/#up-direction","text":"Default : Automatic alignment with terrain normals Function : Ensures agents stand properly on ground surface Adjustment : Can be modified for special orientation needs","title":"Up Direction"},{"location":"static/scatter/vertex/#scale-variation","text":"Min Scale : 0.900 - Smallest agent size (90% of normal) Max Scale : 1.000 - Largest agent size (100% of normal) Seed : 0 - Randomization pattern for size variation Effect : Creates natural size diversity in the crowd","title":"Scale Variation"},{"location":"static/scatter/vertex/#agent-configuration","text":"","title":"Agent Configuration"},{"location":"static/scatter/vertex/#input-requirements","text":"Animated Agents : Collections with idle animations Multiple Collections : Support for varied agent types Probability Control : Balance between different agent collections","title":"Input Requirements"},{"location":"static/scatter/vertex/#customization","text":"Custom Collections : Import additional agent types Clothing Variations : Modify agent appearances Collection Blending : Mix different agent types naturally","title":"Customization"},{"location":"static/scatter/vertex/#mesh-preparation-guide","text":"","title":"Mesh Preparation Guide"},{"location":"static/scatter/vertex/#optimal-vertex-setup","text":"Even Distribution : Vertices should be evenly spaced for consistent agent placement Density Control : More vertices = more agents in that area Mesh Types : Works with any mesh object containing vertices Vertex Groups : Use vertex groups for selective agent placement","title":"Optimal Vertex Setup"},{"location":"static/scatter/vertex/#creating-vertex-patterns","text":"Grid Meshes : For organized, grid-like formations Scattered Points : For random but controlled placement Custom Shapes : Arrange vertices in specific patterns or logos","title":"Creating Vertex Patterns"},{"location":"static/scatter/vertex/#typical-workflow","text":"Mesh Preparation Create or select mesh with desired vertex arrangement Ensure vertex density matches required agent density Use vertex groups for area-specific control Distribution Setup Input mesh object into distribution panel Set maximum agent count if needed Adjust position variation for natural imperfection Spacing Configuration Set personal space parameters Adjust relax iterations for collision quality Fine-tune min/max distances Orientation & Scale Choose rotation mode based on scene requirements Set scale variation for natural size diversity Configure up direction for proper ground alignment Agent Assignment Select agent collections Balance probabilities between collections Apply customizations as needed","title":"Typical Workflow"},{"location":"static/scatter/vertex/#best-practices","text":"","title":"Best Practices"},{"location":"static/scatter/vertex/#for-precise-placement","text":"Use position variation 0.000 for exact vertex alignment Create custom vertex layouts for specific formations Use relax iterations to prevent agent overlapping Combine with vertex groups for complex placement patterns","title":"For Precise Placement"},{"location":"static/scatter/vertex/#mesh-optimization","text":"Use appropriate vertex density for required agent count Avoid overly dense meshes unless high agent count is needed Use simple meshes for large-scale simulations Test different mesh types for various formation needs","title":"Mesh Optimization"},{"location":"static/scatter/vertex/#natural-appearance-tips","text":"Use random rotation with vertex-based placement Apply scale variation to avoid uniform look Use slight position variation to break perfect patterns Mix agent collections for visual diversity","title":"Natural Appearance Tips"},{"location":"static/scatter/vertex/#use-cases","text":"Stadium Seating : Precise seat-by-seat placement Military Formations : Exact positional arrangements Theater Audiences : Controlled seating patterns Ceremonial Events : Structured participant placement Architectural Visualization : Precise population of spaces Logo Formations : Spelling out words or shapes with agents Grid Patterns : Organized displays and exhibitions The On Vertex System provides the most precise control over agent positioning, making it ideal for scenarios requiring exact placement, structured formations, or specific spatial arrangements where vertex-level accuracy is essential.","title":"Use Cases"}]}